[core]
no_lock = True
log_level = WARNING

[worker]
keep_alive = False
ping_interval = 20
wait_interval = 20
max_reschedules = 1

[DEFAULT]
name = KingMaker
ENV_NAME = KingMaker

; grid storage protocol and path usable from submitting machine and worker nodes of cluster
; job in- and output will be stored in $wlcg_path under subdirectory of analysis $name
#wlcg_path = root://cmsxrootd-kit.gridka.de//store/user/${USER}/CROWN/ntuples/
wlcg_path = root://eosuser.cern.ch///eos/user/z/zhiyuanl/CROWN/ntuples/
; default htcondor job submission configuration (modifiable for each task)
htcondor_accounting_group = group_u_CMS.u_zh.users
htcondor_remote_job = True
htcondor_request_cpus = 1
# htcondor_request_gpus = 1
; for all cores in total
htcondor_universe = vanilla
# htcondor_JobFlavour = longlunch     ## is not read by law
# htcondor_Requirements = "(OpSysAndVer =?= "CentOS7")" ## is not read by law
#htcondor_universe = docker # not for lxplis atm
;image without GPU libraries
htcondor_docker_image = mschnepf/slc7-condocker:latest
;image with GPU librariesc
# htcondor_docker_image = tvoigtlaender/slc7-condocker-cuda-11.5-cudnn8:base
; create log files in htcondor jobs
transfer_logs = True
; set local scheduler
local_scheduler = True
; set tolerance for workflow success with failed branches
tolerance = 0.8
acceptance = 0.8
; submit only missing htcondor workflow branches (should always be true)
only_missing = True

; bootstrap file to be sourced at beginning of htcondor jobs (relative PATH to framework.py)
bootstrap_file = setup_law_remote.sh

# scopes = ["mt","et","tt","em"] 
scopes = ["tt", "em"]
# shifts = ["muo", "jes", "jer"]
shifts = ["ALL"]

[CROWNBuild]
build_dir = build
install_dir = tarballs

[CROWNRun]
; HTCondor
htcondor_walltime = 100800
htcondor_request_memory = 16000
#htcondor_requirements = TARGET.ProvidesCPU && TARGET.ProvidesIO && ifthenelse(regexp("mdm", TARGET.CloudSite), False, True)
htcondor_request_disk = 20000000
files_per_task = 1


[ProduceSamples]
dataset_database = sample_database/datasets_2023.yaml

[ConfigureDatasets]
dataset_database = sample_database/datasets_2023.yaml
